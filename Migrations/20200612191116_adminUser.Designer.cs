// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ParkAPI.Models;

namespace ParkAPI.Migrations
{
    [DbContext(typeof(ParkAPIContext))]
    [Migration("20200612191116_adminUser")]
    partial class adminUser
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ParkAPI.Models.Park", b =>
                {
                    b.Property<int>("ParkId")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Beach");

                    b.Property<int>("EntranceFee");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30);

                    b.Property<string>("ParkingPermit");

                    b.Property<bool>("PicnicArea");

                    b.Property<bool>("Playground");

                    b.Property<bool>("RealBathrooms");

                    b.Property<string>("Type");

                    b.Property<int>("UserId");

                    b.Property<bool>("VisitorCenter");

                    b.HasKey("ParkId");

                    b.ToTable("Parks");

                    b.HasData(
                        new
                        {
                            ParkId = 1,
                            Beach = true,
                            EntranceFee = 0,
                            Location = "Issaquah",
                            Name = "Lake Sammamish State Park",
                            ParkingPermit = "Discover Pass",
                            PicnicArea = true,
                            Playground = true,
                            RealBathrooms = true,
                            Type = "Washington State Park",
                            UserId = 100,
                            VisitorCenter = false
                        },
                        new
                        {
                            ParkId = 2,
                            Beach = false,
                            EntranceFee = 0,
                            Location = "Redmond",
                            Name = "Marymoor Park",
                            PicnicArea = true,
                            Playground = true,
                            RealBathrooms = true,
                            Type = "King County Park",
                            UserId = 100,
                            VisitorCenter = false
                        },
                        new
                        {
                            ParkId = 3,
                            Beach = true,
                            EntranceFee = 0,
                            Location = "Sammamish/Issaquah",
                            Name = "Pine Lake Park",
                            PicnicArea = true,
                            Playground = true,
                            RealBathrooms = true,
                            Type = "City Park",
                            UserId = 100,
                            VisitorCenter = false
                        },
                        new
                        {
                            ParkId = 4,
                            Beach = false,
                            EntranceFee = 30,
                            Location = "Multiple Entrances",
                            Name = "Mount Rainier National Park",
                            PicnicArea = true,
                            Playground = false,
                            RealBathrooms = true,
                            Type = "National Park",
                            UserId = 100,
                            VisitorCenter = true
                        });
                });

            modelBuilder.Entity("ParkAPI.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Accessible");

                    b.Property<int>("Clean");

                    b.Property<string>("Comments");

                    b.Property<int>("FunForKids");

                    b.Property<int>("FunForParents");

                    b.Property<int>("ParkId");

                    b.Property<int>("UserId");

                    b.HasKey("RatingId");

                    b.ToTable("Ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            Accessible = 2,
                            Clean = 4,
                            Comments = "Prepare for a lot of time in the car.",
                            FunForKids = 2,
                            FunForParents = 3,
                            ParkId = 4,
                            UserId = 3
                        },
                        new
                        {
                            RatingId = 2,
                            Accessible = 4,
                            Clean = 3,
                            Comments = "Relaxing and fun, but the beach can get gross.",
                            FunForKids = 4,
                            FunForParents = 4,
                            ParkId = 3,
                            UserId = 2
                        },
                        new
                        {
                            RatingId = 3,
                            Accessible = 5,
                            Clean = 2,
                            Comments = "Lots to do, but also lots of trash and goose poop.",
                            FunForKids = 5,
                            FunForParents = 3,
                            ParkId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("ParkAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Password");

                    b.Property<string>("Token");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Password = "p",
                            Username = "Pete"
                        },
                        new
                        {
                            Id = 2,
                            Password = "g",
                            Username = "George"
                        },
                        new
                        {
                            Id = 3,
                            Password = "s",
                            Username = "Sam"
                        },
                        new
                        {
                            Id = 100,
                            Password = "admin",
                            Username = "Admin"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
